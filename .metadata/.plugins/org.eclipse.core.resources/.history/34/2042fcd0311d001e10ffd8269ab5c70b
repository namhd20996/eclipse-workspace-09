package com.assign.util;

import java.util.Date;
import java.util.Properties;
import java.util.ResourceBundle;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import com.assign.dto.UserDTO;

public class Email {

	public static void sendEmail(String to, String tieuDe, String noiDung) {
		ResourceBundle bundle = ResourceBundle.getBundle("mail");
		final String from = bundle.getString("mail.username");
		final String passWord = bundle.getString("mail.password");
		// Properties: Khai báo các thuộc tính
		Properties pros = new Properties();
		// Gửi từ gmail, từ sever nào
		pros.put("mail.smtp.host", "smtp.gmail.com");
		// Port có 2 loại: tls = 587, ssl = 465
		pros.put("mail.smtp.port", "587");
		// Khai báo phải đăng nhập để gửi mail
		pros.put("mail.smtp.auth", "true");
		// Định nghĩa giao thức
		pros.put("mail.smtp.starttls.enable", "true");

		// Tạo đổi tượng auth để đăng nhập vào gmail
		Authenticator auth = new Authenticator() {
			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(from, passWord);
			}

		};
		// Tạo phiên làm việc
		// Đưa các thuộc tính và tài khoản vào phiên làm việc
		Session session = Session.getInstance(pros, auth);
		// Gửi email
		// Tạo tin nhắn mới
		MimeMessage msg = new MimeMessage(session);
		try {
			// Gửi email có nội dung kiểu text và html
			msg.addHeader("Content-type", "text/html; charset=UTF-8");
			// Gửi từ đâu
			msg.setFrom(from);
			// Gửi cho ai và kiểu gửi
			// InternetAddress giúp kiểm tra có đúng định dạng hay không
			// InternetAddress.parse(to, false) để nó ko có Address list
			msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to, false));
			// Tiêu đề
			msg.setSubject(tieuDe);
			// Quy định ngày gửi
			msg.setSentDate(new Date());

			msg.setContent(noiDung, "text/html; charset=UTF-8");
			// Gửi mail
			Transport.send(msg);
			System.out.println("Gửi email thành công");
		} catch (MessagingException e) {
			System.out.println("Gửi email không thành công");
			e.printStackTrace();
		}
	}
	
	public static String getNoiDung(UserDTO dto) {
		String link = "http://localhost:8080/Assign_Java_Four/verify?action=verify&Username="
				+ dto.getUsername() + "&maXacThuc=" + dto.getVerify();
		String noiDung = "<p>Xin ch&agrave;o bạn: <strong>" + dto.getEmail() + "</strong></p>\r\n"
				+ "<p>Vui l&ograve;ng x&aacute;c thực t&agrave;i khoản của bạn bằng c&aacute;ch nhập m&atilde;: <strong>"
				+ dto.getVerify()
				+ "</strong> x&aacute;c thực hoặc click trực tiếp v&agrave;o đường link&nbsp; sau đ&acirc;y:</p>\r\n"
				+ "<p><a href=\"" + link + "\">" + link + "</a></p>\r\n"
				+ "<p>Đ&acirc;y l&agrave; mail tự động xin vui l&ograve;ng kh&ocirc;ng phản hồi email n&agrave;y.</p>\r\n"
				+ "<p>Xin tr&acirc;n trọng cảm ơn.</p>";
		return noiDung;
	}
	
	public static String getNoiDungSendMail(String href) {
		String noiDung = "<p>Xin ch&agrave;o bạn!.. Bạn được gửi một m&oacute;n qu&agrave; b&iacute; mật từ một người bạn của bạn!..</p>\r\n"
				+ "<p>Vui l&ograve;ng click v&agrave;o đường dẫn để nhận được m&oacute;n qu&agrave; đ&oacute; nh&eacute;!</p>\r\n"
				+ "<p><a href=\"https://www.youtube.com/embed/${video.href%20}\">https://www.youtube.com/embed/${video.href }</a></p>\r\n"
				+ "<p>Đ&acirc;y l&agrave; mail tự động vui l&ograve;ng kh&ocirc;ng phản hồi!..</p>\r\n"
				+ "<p><strong>Xin cảm ơn...</strong></p>";
		return noiDung;
	}

	public static void main(String[] args) {
		sendEmail("namhdps25979@fpt.edu.vn", "Test", "Hello fen");
	}
}
